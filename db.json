{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/head.jpg","path":"images/head.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"source/tags/index.md","hash":"8bb0bec2aba6aabd07fa9defe489589be42b1552","modified":1641720523395},{"_id":"source/categories/index.md","hash":"92b59b7bad94f90c393ee0d2681648e4f01d1216","modified":1641720523395},{"_id":"source/_posts/git常用命令总结.md","hash":"10cbe8e61fbf1ad74264968af5e4b34dbe8c4fa8","modified":1641720523395},{"_id":"source/_posts/hello-world.md","hash":"1c30eb9734fdaa6790475b5e6bf5f4b3e92ade1d","modified":1641720523395},{"_id":"source/_posts/在centos7安装nodejs并升级nodejs版本.md","hash":"1d3a3b8f0a750d1481990f48a9f8df7da606a5c2","modified":1641720523395},{"_id":"source/_posts/如何让你的代码更优雅.md","hash":"3889bc8272b02efb700b18b694cc6284ca205cec","modified":1641721015915},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1641720523396},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1641720523396},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1641720523396},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1641720523396},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1641720523397},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1641720523396},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1641720523396},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1641720523414},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1641720523397},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1641720523414},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1641720523416},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1641720523415},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1641720523416},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1641720523416},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1641720523416},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1641720523416},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1641720523416},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1641720523416},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1641720523402},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1641720523397},{"_id":"themes/next/_config.yml","hash":"d4103b7d4380fbf79d3de5c53761da20a7914ef7","modified":1641733599764},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1641720523416},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1641720523416},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1641720523417},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1641720523417},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1641720523417},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1641720523417},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1641720523417},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1641720523417},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1641720523418},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1641720523417},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1641720523417},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1641720523418},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1641720523417},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1641720523425},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1641720523428},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1641720523398},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1641720523398},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1641720523399},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1641720523398},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1641720523399},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1641720523399},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1641720523399},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1641720523413},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1641720523414},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1641720523414},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1641720523413},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1641720523414},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1641720523414},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1641720523398},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1641720523405},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1641720523402},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1641720523402},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1641720523402},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1641720523403},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1641720523402},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1641720523403},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1641720523403},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1641720523403},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1641720523403},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1641720523403},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1641720523404},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1641720523403},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1641720523404},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1641720523402},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1641720523404},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1641720523404},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1641720523404},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1641720523405},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1641720523405},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1641720523405},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1641720523404},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1641720523404},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1641720523430},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1641720523431},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1641720523430},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1641720523431},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1641720523430},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1641720523431},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1641720523428},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1641720523428},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1641720523428},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1641720523428},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1641720523429},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1641720523428},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1641720523429},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1641720523429},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1641720523414},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1641720523429},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1641720523431},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1641720523429},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1641720523429},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1641720523415},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1641720523414},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1641720523415},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1641720523415},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1641720523415},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1641720523415},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1641720523415},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1641720523415},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1641720523430},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1641720523415},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1641720523415},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1641720523429},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1641720523427},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1641720523427},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1641720523428},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1641720523428},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1641720523399},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1641720523400},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1641720523400},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1641720523400},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1641720523400},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1641720523427},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1641720523401},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1641720523401},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1641720523400},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1641720523401},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1641720523401},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1641720523401},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1641720523401},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1641720523406},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c2835ff083d87e661ccc487315191b5f9d437070","modified":1641720523406},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1641720523398},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1641720523401},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1641720523407},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1641720523407},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1641720523405},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1641720523405},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1641720523408},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1641720523409},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1641720523410},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1641720523409},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1641720523410},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1641720523409},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1641720523405},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1641720523411},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1641720523412},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1641720523410},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1641720523431},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1641720523412},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1641720523431},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1641720523418},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1641720523418},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1641720523433},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1641720523418},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1641720523424},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1641720523433},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1641720523424},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1641720523424},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1641720523424},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1641720523423},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1641720523424},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1641720523425},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1641720523426},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1641720523426},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1641720523426},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1641720523425},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1641720523426},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1641720523422},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1641720523427},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1641720523421},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1641720523427},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1641720523427},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1641720523426},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1641720523427},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1641720523427},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1641720523427},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1641720523427},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1641720523426},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1641720523422},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1641720523426},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1641720523426},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1641720523427},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1641720523406},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1641720523426},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1641720523407},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1641720523407},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1641720523407},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1641720523407},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1641720523406},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1641720523406},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1641720523406},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1641720523408},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1641720523407},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1641720523406},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1641720523407},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1641720523406},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1641720523408},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1641720523408},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1641720523408},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1641720523408},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1641720523408},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1641720523426},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1641720523409},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1641720523409},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1641720523409},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1641720523410},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1641720523410},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1641720523410},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1641720523410},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1641720523412},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1641720523412},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1641720523412},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1641720523410},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1641720523411},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1641720523409},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1641720523409},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1641720523412},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1641720523412},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1641720523411},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1641720523411},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1641720523411},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1641720523411},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1641720523412},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1641720523413},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1641720523411},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1641720523413},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1641720523411},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1641720523413},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1641720523413},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1641720523413},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1641720523413},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1641720523418},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1641720523432},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1641720523432},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1641720523419},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1641720523413},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1641720523419},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1641720523419},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1641720523419},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1641720523421},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1641720523421},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1641720523421},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1641720523421},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1641720523421},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1641720523424},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1641720523424},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1641720523424},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1641720523425},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1641720523425},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1641720523424},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1641720523425},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1641720523425},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1641720523422},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1641720523421},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1641720523425},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1641720523425},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1641720523425},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1641720523422},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1641720523422},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1641720523422},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1641720523419},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1641720523419},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1641720523419},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1641720523422},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1641720523420},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1641720523420},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1641720523419},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1641720523420},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1641720523420},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1641720523422},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1641720523420},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1641720523420},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1641720523420},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1641720523420},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1641720523420},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1641720523423},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1641720523422},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1641720523423},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1641720523423},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1641720523423},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1641720523423},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1641720523423},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1641720523423},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1641720523423},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1641720523423},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1641720523421},{"_id":"themes/next/source/images/head.jpg","hash":"0b12831adc0835cd780f14b10b2c761453ca7410","modified":1641720523430},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1641720523432},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1641720523432},{"_id":"public/atom.xml","hash":"1033f3f99d8e3afbf3fba2b6544ba3ca1bb5b473","modified":1641733660698},{"_id":"public/content.json","hash":"532539d38f085cb6426b2ef61d8920413e1a09f0","modified":1641733660698},{"_id":"public/baidu_urls.txt","hash":"d5e4fb0d554d7ae6b46f22bf15eb910b65205bae","modified":1641733660698},{"_id":"public/sitemap.xml","hash":"f10912d7210d0eaf2af404c8546bf2578f312f16","modified":1641733660698},{"_id":"public/search.xml","hash":"8b69f0cb4ab4b5c8aa4dd3fb4bc97af95cc1608f","modified":1641733660698},{"_id":"public/categories/index.html","hash":"56bea31281eb4a8f66da3cde794619d6e3384e4f","modified":1641733660698},{"_id":"public/tags/index.html","hash":"c78e6f33df14e087b9c6b51d855e2b5c400a2a76","modified":1641733660698},{"_id":"public/archives/index.html","hash":"bd0839c8e6e8f3bf00b7161a5c460522b7c89530","modified":1641733660698},{"_id":"public/archives/2022/index.html","hash":"cca15befff4457fae74d20cc9103e91909f5d761","modified":1641733660698},{"_id":"public/categories/Git/index.html","hash":"b1d759408e13d61b11f7b68d154ef088a47175e2","modified":1641733660698},{"_id":"public/archives/2022/01/index.html","hash":"8f7d94e0ef8493daccb8551607954e3c0921762d","modified":1641733660698},{"_id":"public/categories/前端/index.html","hash":"133c0a4b6a2237775f0f8d45731ade7d9bac6734","modified":1641733660698},{"_id":"public/posts/acc3d3b0.html","hash":"4b73cf10ff37fb515c3562a75073a09361059118","modified":1641733660698},{"_id":"public/posts/4a17b156.html","hash":"1d6a79e911a1e758c0d0579b9e52c941da3e597c","modified":1641733660698},{"_id":"public/posts/59268fdb.html","hash":"1665aff316e87ffe508120983badbc841da8fd5a","modified":1641733660698},{"_id":"public/posts/932a8af7.html","hash":"9c47f8a13e327df389d947695487eb9dd9671d85","modified":1641733660698},{"_id":"public/tags/github/index.html","hash":"5102e185ce63f14e56753741fffbadb4fb332dc3","modified":1641733660698},{"_id":"public/tags/优雅/index.html","hash":"57089762199eda1918807b7494a0dd4eea0a874f","modified":1641733660698},{"_id":"public/index.html","hash":"1e068ad15c90af3ff362823dfa9a3cd665f6c2b2","modified":1641733660698},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1641733660698},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1641733660698},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1641733660698},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1641733660698},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1641733660698},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1641733660698},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1641733660698},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1641733660698},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1641733660698},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1641733660698},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1641733660698},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1641733660698},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1641733660698},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1641733660698},{"_id":"public/images/head.jpg","hash":"0b12831adc0835cd780f14b10b2c761453ca7410","modified":1641733660698},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1641733660698},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1641733660698},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1641733660698},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1641733660698},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1641733660698},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1641733660698},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1641733660698},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1641733660698},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1641733660698},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1641733660698},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1641733660698},{"_id":"public/css/main.css","hash":"612183b1d4e60bc2431f3fa07b4276f011fed6fb","modified":1641733660698},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1641733660698},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1641733660698},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1641733660698}],"Category":[{"name":"Git","_id":"cky79u00o0004qcl390sl26l6"},{"name":"前端","_id":"cky79u00q000aqcl33yh568xm"}],"Data":[],"Page":[{"title":"tags","date":"2022-01-08T05:50:54.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-01-08 13:50:54\ntype: \"tags\"\n---\n","updated":"2022-01-09T09:28:43.395Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cky79u00k0000qcl35jxo8fi5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2022-01-08T05:51:34.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-01-08 13:51:34\ntype: \"categories\"\n---\n","updated":"2022-01-09T09:28:43.395Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cky79u00n0002qcl3fhkm721j","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"abbrlink":"acc3d3b0","title":"git常用命令总结","date":"2022-01-07T16:00:00.000Z","_content":"## 新建仓库\n```\necho \"# test\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin git@github.com:foxscalliom/test.git\ngit push -u origin main\n```\n<!--more-->\n## 拉取仓库\n```\ngit remote add origin git@github.com:foxscalliom/test.git\ngit branch -M main\ngit push -u origin main\n```\n## 不保留本地\n```\ngit reset --hard \ngit pull origin main\n```","source":"_posts/git常用命令总结.md","raw":"---\nabbrlink: acc3d3b0\ntitle: git常用命令总结\ndate: 2022-01-08\ncategories: \n   - Git\ntags: \n   - github  \n---\n## 新建仓库\n```\necho \"# test\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin git@github.com:foxscalliom/test.git\ngit push -u origin main\n```\n<!--more-->\n## 拉取仓库\n```\ngit remote add origin git@github.com:foxscalliom/test.git\ngit branch -M main\ngit push -u origin main\n```\n## 不保留本地\n```\ngit reset --hard \ngit pull origin main\n```","slug":"git常用命令总结","published":1,"updated":"2022-01-09T09:28:43.395Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky79u00l0001qcl3ffnp644i","content":"<h2 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;# test&quot; &gt;&gt; README.md</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m &quot;first commit&quot;</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin git@github.com:foxscalliom/test.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h2 id=\"拉取仓库\"><a href=\"#拉取仓库\" class=\"headerlink\" title=\"拉取仓库\"></a>拉取仓库</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@github.com:foxscalliom/test.git</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n<h2 id=\"不保留本地\"><a href=\"#不保留本地\" class=\"headerlink\" title=\"不保留本地\"></a>不保留本地</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard </span><br><span class=\"line\">git pull origin main</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"新建仓库\"><a href=\"#新建仓库\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;# test&quot; &gt;&gt; README.md</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m &quot;first commit&quot;</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin git@github.com:foxscalliom/test.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"拉取仓库\"><a href=\"#拉取仓库\" class=\"headerlink\" title=\"拉取仓库\"></a>拉取仓库</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@github.com:foxscalliom/test.git</span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n<h2 id=\"不保留本地\"><a href=\"#不保留本地\" class=\"headerlink\" title=\"不保留本地\"></a>不保留本地</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard </span><br><span class=\"line\">git pull origin main</span><br></pre></td></tr></table></figure>"},{"title":"在centos7安装nodejs并升级nodejs版本","abbrlink":"59268fdb","date":"2022-01-06T16:00:00.000Z","_content":"## 1. 安装 nodejs\n------------\n\n### 1.1 使用 EPEL 安装\n\nEPEL（Extra Packages for Enterprise Linux）企业版 Linux 的额外软件包，是 Fedora 小组维护的一个软件仓库项目，为 RHEL/CentOS 提供他们默认不提供的软件包。  \n先确认系统是否已经安装了 epel-release 包：\n```\n$ yum info epel-release\n\n```\n<!--more-->\n如果有输出有关 epel-release 的已安装信息，则说明已经安装，如果提示没有安装或可安装，则安装\n\n```\n$ yum install epel-release\n```\n\n安装完后，就可以使用 yum 命令安装 nodejs 了，安装的一般会是 6.x 的版本，并且会将 npm(3.x) 作为依赖包一起安装\n```\n$ sudo yum install nodejs\n```\n\n安装完成后，验证是否正确的安装，`node -v`，如果输出如下版本信息，说明成功安装\n\n```\nv6.13.3\n```\n\n问题来了，现在 nodejs 发的版本比较快，有些新的框架需要 node 的新版本，那如何升级。到现在，node 的最新版本是`10.4.1`，那么，下面介绍如何升级 nodejs\n\n### 1.2 卸载 nodejs\n\n> 注意：这里卸载并非必要步骤。只是提供卸载的方案，请按需操作，不要安装后又删除又进行安装掉进死循环了。\n\n1.2.1 使用 yum 先删除一次\n\n```\nyum remove nodejs npm -y\n```\n\n1.2.2 手动删除残留\n\n*   进入 /usr/local/lib 删除所有 node 和 node_modules 文件夹\n*   进入 /usr/local/include 删除所有 node 和 node_modules 文件夹\n*   检查 ~ 文件夹里面的 \"local\" \"lib\" \"include\" 文件夹，然后删除里面的所有 \"node\" 和 \"node_modules\" 文件夹\n*   可以使用以下命令查找 `$ find ~/ -name node` `$ find ~/ -name node_modules`\n\n1.2.3 进入 /usr/local/bin 删除 node 的可执行文件\n\n*   删除: /usr/local/bin/npm\n*   删除: /usr/local/share/man/man1/node.1\n*   删除: /usr/local/lib/dtrace/node.d\n*   删除: rm -rf /home/[homedir]/.npm\n*   删除: rm -rf /home/root/.npm\n\n## 2. 升级 nodesj\n------------\n\n### 2.1 安装 n\n\nn 是 nodejs 管理工具，是 TJ 写的，Github: [https://github.com/tj/n](https://github.com/tj/n)\n\n```\n$ npm install -g n\n```\n\n### 2.2 安装 nodejs 版本\n\n安装最新版\n\n```\n$ n latest\n```\n\n安装指定版本\n\n```\n$ n 8.11.3  \n```\n\n### 2.3 切换 nodejs 版本\n\n```\n$ n\n```\n\n选择已安装的版本\n\n```\n   node/8.11.3\n   node/10.4.1\n```\n\n查看当前版本`node -v`，下面表示已切换成功\n\n```\nv8.13.3\n```\n\n但问题来了，切换后，查看版本还是原来的 v6.13.3，看下面 **使用 n 切换 nodejs 版本失效的解决办法**\n\n## 3 切换失效的解决办法\n-----------\n\n### 3.1 查看 node 当前安装路径\n\n```\n$ which node\n/usr/local/bin/node #举个例子\n```\n\n### 3.2 修改默认路径\n而 n 默认安装路径是 /usr/local，若你的 node 不是在此路径下，n 切换版本就不能把 bin、lib、include、share 复制该路径中，所以我们必须通过 N_PREFIX 变量来修改 n 的默认 node 安装路径。  \n编辑环境配置文件：\n\n```\n$ vim ~/.bash_profile\n```\n\n### 3.3 将下面两行代码插入到文件末尾：\n\n```\nexport N_PREFIX=/usr/local #node实际安装位置\nexport PATH=$N_PREFIX/bin:$PATH\n```\n\n### 3.4 `:wq`保存退出\n\n### 3.5 执行 source 使修改生效。\n\n```\n$ source ~/.bash_profile\n```\n\n### 3.6 这时候再查看`node -v`发现版本切换成功了。\n","source":"_posts/在centos7安装nodejs并升级nodejs版本.md","raw":"---\ntitle: 在centos7安装nodejs并升级nodejs版本\nabbrlink: 59268fdb\ndate: 2022-01-07\n---\n## 1. 安装 nodejs\n------------\n\n### 1.1 使用 EPEL 安装\n\nEPEL（Extra Packages for Enterprise Linux）企业版 Linux 的额外软件包，是 Fedora 小组维护的一个软件仓库项目，为 RHEL/CentOS 提供他们默认不提供的软件包。  \n先确认系统是否已经安装了 epel-release 包：\n```\n$ yum info epel-release\n\n```\n<!--more-->\n如果有输出有关 epel-release 的已安装信息，则说明已经安装，如果提示没有安装或可安装，则安装\n\n```\n$ yum install epel-release\n```\n\n安装完后，就可以使用 yum 命令安装 nodejs 了，安装的一般会是 6.x 的版本，并且会将 npm(3.x) 作为依赖包一起安装\n```\n$ sudo yum install nodejs\n```\n\n安装完成后，验证是否正确的安装，`node -v`，如果输出如下版本信息，说明成功安装\n\n```\nv6.13.3\n```\n\n问题来了，现在 nodejs 发的版本比较快，有些新的框架需要 node 的新版本，那如何升级。到现在，node 的最新版本是`10.4.1`，那么，下面介绍如何升级 nodejs\n\n### 1.2 卸载 nodejs\n\n> 注意：这里卸载并非必要步骤。只是提供卸载的方案，请按需操作，不要安装后又删除又进行安装掉进死循环了。\n\n1.2.1 使用 yum 先删除一次\n\n```\nyum remove nodejs npm -y\n```\n\n1.2.2 手动删除残留\n\n*   进入 /usr/local/lib 删除所有 node 和 node_modules 文件夹\n*   进入 /usr/local/include 删除所有 node 和 node_modules 文件夹\n*   检查 ~ 文件夹里面的 \"local\" \"lib\" \"include\" 文件夹，然后删除里面的所有 \"node\" 和 \"node_modules\" 文件夹\n*   可以使用以下命令查找 `$ find ~/ -name node` `$ find ~/ -name node_modules`\n\n1.2.3 进入 /usr/local/bin 删除 node 的可执行文件\n\n*   删除: /usr/local/bin/npm\n*   删除: /usr/local/share/man/man1/node.1\n*   删除: /usr/local/lib/dtrace/node.d\n*   删除: rm -rf /home/[homedir]/.npm\n*   删除: rm -rf /home/root/.npm\n\n## 2. 升级 nodesj\n------------\n\n### 2.1 安装 n\n\nn 是 nodejs 管理工具，是 TJ 写的，Github: [https://github.com/tj/n](https://github.com/tj/n)\n\n```\n$ npm install -g n\n```\n\n### 2.2 安装 nodejs 版本\n\n安装最新版\n\n```\n$ n latest\n```\n\n安装指定版本\n\n```\n$ n 8.11.3  \n```\n\n### 2.3 切换 nodejs 版本\n\n```\n$ n\n```\n\n选择已安装的版本\n\n```\n   node/8.11.3\n   node/10.4.1\n```\n\n查看当前版本`node -v`，下面表示已切换成功\n\n```\nv8.13.3\n```\n\n但问题来了，切换后，查看版本还是原来的 v6.13.3，看下面 **使用 n 切换 nodejs 版本失效的解决办法**\n\n## 3 切换失效的解决办法\n-----------\n\n### 3.1 查看 node 当前安装路径\n\n```\n$ which node\n/usr/local/bin/node #举个例子\n```\n\n### 3.2 修改默认路径\n而 n 默认安装路径是 /usr/local，若你的 node 不是在此路径下，n 切换版本就不能把 bin、lib、include、share 复制该路径中，所以我们必须通过 N_PREFIX 变量来修改 n 的默认 node 安装路径。  \n编辑环境配置文件：\n\n```\n$ vim ~/.bash_profile\n```\n\n### 3.3 将下面两行代码插入到文件末尾：\n\n```\nexport N_PREFIX=/usr/local #node实际安装位置\nexport PATH=$N_PREFIX/bin:$PATH\n```\n\n### 3.4 `:wq`保存退出\n\n### 3.5 执行 source 使修改生效。\n\n```\n$ source ~/.bash_profile\n```\n\n### 3.6 这时候再查看`node -v`发现版本切换成功了。\n","slug":"在centos7安装nodejs并升级nodejs版本","published":1,"updated":"2022-01-09T09:28:43.395Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky79u00n0003qcl3d0483bzx","content":"<h2 id=\"1-安装-nodejs\"><a href=\"#1-安装-nodejs\" class=\"headerlink\" title=\"1. 安装 nodejs\"></a>1. 安装 nodejs</h2><hr>\n<h3 id=\"1-1-使用-EPEL-安装\"><a href=\"#1-1-使用-EPEL-安装\" class=\"headerlink\" title=\"1.1 使用 EPEL 安装\"></a>1.1 使用 EPEL 安装</h3><p>EPEL（Extra Packages for Enterprise Linux）企业版 Linux 的额外软件包，是 Fedora 小组维护的一个软件仓库项目，为 RHEL/CentOS 提供他们默认不提供的软件包。<br>先确认系统是否已经安装了 epel-release 包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum info epel-release</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<p>如果有输出有关 epel-release 的已安装信息，则说明已经安装，如果提示没有安装或可安装，则安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install epel-release</span><br></pre></td></tr></table></figure>\n\n<p>安装完后，就可以使用 yum 命令安装 nodejs 了，安装的一般会是 6.x 的版本，并且会将 npm(3.x) 作为依赖包一起安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install nodejs</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后，验证是否正确的安装，<code>node -v</code>，如果输出如下版本信息，说明成功安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v6.13.3</span><br></pre></td></tr></table></figure>\n\n<p>问题来了，现在 nodejs 发的版本比较快，有些新的框架需要 node 的新版本，那如何升级。到现在，node 的最新版本是<code>10.4.1</code>，那么，下面介绍如何升级 nodejs</p>\n<h3 id=\"1-2-卸载-nodejs\"><a href=\"#1-2-卸载-nodejs\" class=\"headerlink\" title=\"1.2 卸载 nodejs\"></a>1.2 卸载 nodejs</h3><blockquote>\n<p>注意：这里卸载并非必要步骤。只是提供卸载的方案，请按需操作，不要安装后又删除又进行安装掉进死循环了。</p>\n</blockquote>\n<p>1.2.1 使用 yum 先删除一次</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum remove nodejs npm -y</span><br></pre></td></tr></table></figure>\n\n<p>1.2.2 手动删除残留</p>\n<ul>\n<li>  进入 /usr/local/lib 删除所有 node 和 node_modules 文件夹</li>\n<li>  进入 /usr/local/include 删除所有 node 和 node_modules 文件夹</li>\n<li>  检查 ~ 文件夹里面的 “local” “lib” “include” 文件夹，然后删除里面的所有 “node” 和 “node_modules” 文件夹</li>\n<li>  可以使用以下命令查找 <code>$ find ~/ -name node</code> <code>$ find ~/ -name node_modules</code></li>\n</ul>\n<p>1.2.3 进入 /usr/local/bin 删除 node 的可执行文件</p>\n<ul>\n<li>  删除: /usr/local/bin/npm</li>\n<li>  删除: /usr/local/share/man/man1/node.1</li>\n<li>  删除: /usr/local/lib/dtrace/node.d</li>\n<li>  删除: rm -rf /home/[homedir]/.npm</li>\n<li>  删除: rm -rf /home/root/.npm</li>\n</ul>\n<h2 id=\"2-升级-nodesj\"><a href=\"#2-升级-nodesj\" class=\"headerlink\" title=\"2. 升级 nodesj\"></a>2. 升级 nodesj</h2><hr>\n<h3 id=\"2-1-安装-n\"><a href=\"#2-1-安装-n\" class=\"headerlink\" title=\"2.1 安装 n\"></a>2.1 安装 n</h3><p>n 是 nodejs 管理工具，是 TJ 写的，Github: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RqL24=\">https://github.com/tj/n<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g n</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-安装-nodejs-版本\"><a href=\"#2-2-安装-nodejs-版本\" class=\"headerlink\" title=\"2.2 安装 nodejs 版本\"></a>2.2 安装 nodejs 版本</h3><p>安装最新版</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ n latest</span><br></pre></td></tr></table></figure>\n\n<p>安装指定版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ n 8.11.3  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-切换-nodejs-版本\"><a href=\"#2-3-切换-nodejs-版本\" class=\"headerlink\" title=\"2.3 切换 nodejs 版本\"></a>2.3 切换 nodejs 版本</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ n</span><br></pre></td></tr></table></figure>\n\n<p>选择已安装的版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node/8.11.3</span><br><span class=\"line\">node/10.4.1</span><br></pre></td></tr></table></figure>\n\n<p>查看当前版本<code>node -v</code>，下面表示已切换成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v8.13.3</span><br></pre></td></tr></table></figure>\n\n<p>但问题来了，切换后，查看版本还是原来的 v6.13.3，看下面 <strong>使用 n 切换 nodejs 版本失效的解决办法</strong></p>\n<h2 id=\"3-切换失效的解决办法\"><a href=\"#3-切换失效的解决办法\" class=\"headerlink\" title=\"3 切换失效的解决办法\"></a>3 切换失效的解决办法</h2><hr>\n<h3 id=\"3-1-查看-node-当前安装路径\"><a href=\"#3-1-查看-node-当前安装路径\" class=\"headerlink\" title=\"3.1 查看 node 当前安装路径\"></a>3.1 查看 node 当前安装路径</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ which node</span><br><span class=\"line\">/usr/local/bin/node #举个例子</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-修改默认路径\"><a href=\"#3-2-修改默认路径\" class=\"headerlink\" title=\"3.2 修改默认路径\"></a>3.2 修改默认路径</h3><p>而 n 默认安装路径是 /usr/local，若你的 node 不是在此路径下，n 切换版本就不能把 bin、lib、include、share 复制该路径中，所以我们必须通过 N_PREFIX 变量来修改 n 的默认 node 安装路径。<br>编辑环境配置文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-将下面两行代码插入到文件末尾：\"><a href=\"#3-3-将下面两行代码插入到文件末尾：\" class=\"headerlink\" title=\"3.3 将下面两行代码插入到文件末尾：\"></a>3.3 将下面两行代码插入到文件末尾：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export N_PREFIX=/usr/local #node实际安装位置</span><br><span class=\"line\">export PATH=$N_PREFIX/bin:$PATH</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-wq保存退出\"><a href=\"#3-4-wq保存退出\" class=\"headerlink\" title=\"3.4 :wq保存退出\"></a>3.4 <code>:wq</code>保存退出</h3><h3 id=\"3-5-执行-source-使修改生效。\"><a href=\"#3-5-执行-source-使修改生效。\" class=\"headerlink\" title=\"3.5 执行 source 使修改生效。\"></a>3.5 执行 source 使修改生效。</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-6-这时候再查看node-v发现版本切换成功了。\"><a href=\"#3-6-这时候再查看node-v发现版本切换成功了。\" class=\"headerlink\" title=\"3.6 这时候再查看node -v发现版本切换成功了。\"></a>3.6 这时候再查看<code>node -v</code>发现版本切换成功了。</h3>","site":{"data":{}},"excerpt":"<h2 id=\"1-安装-nodejs\"><a href=\"#1-安装-nodejs\" class=\"headerlink\" title=\"1. 安装 nodejs\"></a>1. 安装 nodejs</h2><hr>\n<h3 id=\"1-1-使用-EPEL-安装\"><a href=\"#1-1-使用-EPEL-安装\" class=\"headerlink\" title=\"1.1 使用 EPEL 安装\"></a>1.1 使用 EPEL 安装</h3><p>EPEL（Extra Packages for Enterprise Linux）企业版 Linux 的额外软件包，是 Fedora 小组维护的一个软件仓库项目，为 RHEL/CentOS 提供他们默认不提供的软件包。<br>先确认系统是否已经安装了 epel-release 包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum info epel-release</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","more":"<p>如果有输出有关 epel-release 的已安装信息，则说明已经安装，如果提示没有安装或可安装，则安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum install epel-release</span><br></pre></td></tr></table></figure>\n\n<p>安装完后，就可以使用 yum 命令安装 nodejs 了，安装的一般会是 6.x 的版本，并且会将 npm(3.x) 作为依赖包一起安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install nodejs</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后，验证是否正确的安装，<code>node -v</code>，如果输出如下版本信息，说明成功安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v6.13.3</span><br></pre></td></tr></table></figure>\n\n<p>问题来了，现在 nodejs 发的版本比较快，有些新的框架需要 node 的新版本，那如何升级。到现在，node 的最新版本是<code>10.4.1</code>，那么，下面介绍如何升级 nodejs</p>\n<h3 id=\"1-2-卸载-nodejs\"><a href=\"#1-2-卸载-nodejs\" class=\"headerlink\" title=\"1.2 卸载 nodejs\"></a>1.2 卸载 nodejs</h3><blockquote>\n<p>注意：这里卸载并非必要步骤。只是提供卸载的方案，请按需操作，不要安装后又删除又进行安装掉进死循环了。</p>\n</blockquote>\n<p>1.2.1 使用 yum 先删除一次</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum remove nodejs npm -y</span><br></pre></td></tr></table></figure>\n\n<p>1.2.2 手动删除残留</p>\n<ul>\n<li>  进入 /usr/local/lib 删除所有 node 和 node_modules 文件夹</li>\n<li>  进入 /usr/local/include 删除所有 node 和 node_modules 文件夹</li>\n<li>  检查 ~ 文件夹里面的 “local” “lib” “include” 文件夹，然后删除里面的所有 “node” 和 “node_modules” 文件夹</li>\n<li>  可以使用以下命令查找 <code>$ find ~/ -name node</code> <code>$ find ~/ -name node_modules</code></li>\n</ul>\n<p>1.2.3 进入 /usr/local/bin 删除 node 的可执行文件</p>\n<ul>\n<li>  删除: /usr/local/bin/npm</li>\n<li>  删除: /usr/local/share/man/man1/node.1</li>\n<li>  删除: /usr/local/lib/dtrace/node.d</li>\n<li>  删除: rm -rf /home/[homedir]/.npm</li>\n<li>  删除: rm -rf /home/root/.npm</li>\n</ul>\n<h2 id=\"2-升级-nodesj\"><a href=\"#2-升级-nodesj\" class=\"headerlink\" title=\"2. 升级 nodesj\"></a>2. 升级 nodesj</h2><hr>\n<h3 id=\"2-1-安装-n\"><a href=\"#2-1-安装-n\" class=\"headerlink\" title=\"2.1 安装 n\"></a>2.1 安装 n</h3><p>n 是 nodejs 管理工具，是 TJ 写的，Github: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RqL24=\">https://github.com/tj/n<i class=\"fa fa-external-link-alt\"></i></span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g n</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-安装-nodejs-版本\"><a href=\"#2-2-安装-nodejs-版本\" class=\"headerlink\" title=\"2.2 安装 nodejs 版本\"></a>2.2 安装 nodejs 版本</h3><p>安装最新版</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ n latest</span><br></pre></td></tr></table></figure>\n\n<p>安装指定版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ n 8.11.3  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-切换-nodejs-版本\"><a href=\"#2-3-切换-nodejs-版本\" class=\"headerlink\" title=\"2.3 切换 nodejs 版本\"></a>2.3 切换 nodejs 版本</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ n</span><br></pre></td></tr></table></figure>\n\n<p>选择已安装的版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node/8.11.3</span><br><span class=\"line\">node/10.4.1</span><br></pre></td></tr></table></figure>\n\n<p>查看当前版本<code>node -v</code>，下面表示已切换成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v8.13.3</span><br></pre></td></tr></table></figure>\n\n<p>但问题来了，切换后，查看版本还是原来的 v6.13.3，看下面 <strong>使用 n 切换 nodejs 版本失效的解决办法</strong></p>\n<h2 id=\"3-切换失效的解决办法\"><a href=\"#3-切换失效的解决办法\" class=\"headerlink\" title=\"3 切换失效的解决办法\"></a>3 切换失效的解决办法</h2><hr>\n<h3 id=\"3-1-查看-node-当前安装路径\"><a href=\"#3-1-查看-node-当前安装路径\" class=\"headerlink\" title=\"3.1 查看 node 当前安装路径\"></a>3.1 查看 node 当前安装路径</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ which node</span><br><span class=\"line\">/usr/local/bin/node #举个例子</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-修改默认路径\"><a href=\"#3-2-修改默认路径\" class=\"headerlink\" title=\"3.2 修改默认路径\"></a>3.2 修改默认路径</h3><p>而 n 默认安装路径是 /usr/local，若你的 node 不是在此路径下，n 切换版本就不能把 bin、lib、include、share 复制该路径中，所以我们必须通过 N_PREFIX 变量来修改 n 的默认 node 安装路径。<br>编辑环境配置文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-将下面两行代码插入到文件末尾：\"><a href=\"#3-3-将下面两行代码插入到文件末尾：\" class=\"headerlink\" title=\"3.3 将下面两行代码插入到文件末尾：\"></a>3.3 将下面两行代码插入到文件末尾：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export N_PREFIX=/usr/local #node实际安装位置</span><br><span class=\"line\">export PATH=$N_PREFIX/bin:$PATH</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-4-wq保存退出\"><a href=\"#3-4-wq保存退出\" class=\"headerlink\" title=\"3.4 :wq保存退出\"></a>3.4 <code>:wq</code>保存退出</h3><h3 id=\"3-5-执行-source-使修改生效。\"><a href=\"#3-5-执行-source-使修改生效。\" class=\"headerlink\" title=\"3.5 执行 source 使修改生效。\"></a>3.5 执行 source 使修改生效。</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-6-这时候再查看node-v发现版本切换成功了。\"><a href=\"#3-6-这时候再查看node-v发现版本切换成功了。\" class=\"headerlink\" title=\"3.6 这时候再查看node -v发现版本切换成功了。\"></a>3.6 这时候再查看<code>node -v</code>发现版本切换成功了。</h3>"},{"title":"Hello World","abbrlink":"4a17b156","date":"2021-12-31T16:00:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!--more-->\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\nabbrlink: 4a17b156\ndate: 2022-01-01\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!--more-->\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2022-01-09T09:28:43.395Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky79u00p0006qcl35xx6am6o","content":"<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo<i class=\"fa fa-external-link-alt\"></i></span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation<i class=\"fa fa-external-link-alt\"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting<i class=\"fa fa-external-link-alt\"></i></span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment<i class=\"fa fa-external-link-alt\"></i></span></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo<i class=\"fa fa-external-link-alt\"></i></span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation<i class=\"fa fa-external-link-alt\"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting<i class=\"fa fa-external-link-alt\"></i></span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>","more":"<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment<i class=\"fa fa-external-link-alt\"></i></span></p>"},{"title":"如何让你的代码更优雅","abbrlink":"932a8af7","date":"2022-01-08T08:35:04.000Z","_content":"## 常量赋值\n### 引用数据类型\n包括接口中返回的数据，要做好兜底\n```js\nlet lastName = fullName[1] || ''\nlet propertyValue=Object.attr || 0\n```\n### 指明类型\n要按强类型风格写代码定义变量的时候要指明类型，并且在变量声明之后，不要随意的去更改变量的数据类型\n```js\n// 假设声明三个变量a,b,c\nlet a,b,c; // difference，定义变量时没有指明类型\nlet a = \"\", b = [], c = {}; // good\n```\n## 逻辑判断\n### `==`逻辑判断注意\n`==` 表示只要值相等即为真，`===` 要求不仅值相等，而且也要求类型相同\n使用== 有时候会达不到预期的结果，埋下隐患\n```js\n0  == ''          // true\n0  == '0'         // true\n'' == 0           // true\n'' == '0'         // false\nfalse == '0'        // true\nfalse == 'false'    // false\nfalse == undefined  // false\nfalse == null       // false\nnull == undefined   // true\ntrue == 1           // true\n```\n### 数据类型不确定\n如果变量的数据类型不确定，那咱就手动的转换一下，让它确定\n```js\nlet total = \"6\";\nif(parseInt(total) === 6){} // grace 手动转换一下数据类型\n```\n<!--more-->\n## 数组\n### 数组拷贝\n```js\nlet items=['1','2','3'];\nconst itemCopy = [...items]\n// joining arrays \nconst odd = [1, 3, 5 ]; \nconst nums = [2 ,4 , 6, ...odd]; \n```\n### 变量赋值\n```js\nconst Arr = [1, 2, 3, 4];\nconst [first, second] = Arr; \n```\n## 函数的命名\n 返回布尔值函数应以is/can/has等单词开头，能够让人更直观的了解到这个函数的功能；获取接口中的数据使用get开头进行命名,动作函数要以动词开头。\n```js\n// grace\nlet isSupport = () => {};\nlet canUpdate = () => {};\nlet geUserInfo = (user) => {}\nlet setUserInfo = (user) => {}\n```\n## 优先使用箭头函数\n```js\n// grace 是不是看着更简介优雅了\nlet findAge = (arr, age)=> arr.filter(num => num === age)\n```\n## 函数的入参\n函数的入参，是能够让使用者，在调用这个函数的时候，能够更加的清晰明了的把这个函数所需要的参数传递给函数，不容易出现，参数传递错误（参数的顺序颠倒等）一些低级，而又不好查找的问题\n```js\n// difference\n// true和false啥意思，没有个注释的话，看上去就是一脸懵逼\nfunction getImages(api, true, false); \n// grace\n// 一目了然，知道这些true和false是啥意思\nfunction getImages({\n    imageApi: api,\n    includePageBackground: true, \n    compress: false,\n})\n```\n## 接收参数\n如果函数的的参数是对象，也要优先使用解构赋值，上代码\n```js\n// 假设现在的场景是获取用户的信息上的现用名，和曾用名\n// difference\nfunction getFullName(user) {\n  const firstName = user.firstName;\n  const lastName = user.lastName;\n}\n\n// commonly\nfunction getFullName(obj) {\n  const { firstName, lastName } = obj;\n}\n\n// grace\nfunction getFullName({ firstName, lastName }) {\n}\n\n// grace 给它个默认值\nfunction getFullName({firstName, lastName = '无'}) {\n}\n \n// 觉得参数的名称太长，咱再来个重命名  解构时重命名简化命名\n// grace\nfunction getFullName ({firstName: first, lastName: last}) {\n \n}\n```\n## 参数效验\n更少的嵌套，不满足条件尽早 return，尽可能的减少嵌套，嵌套的层级越少，函数看着越简洁优雅\n```js\nfunction test(name, sex = 1) {\n  // 不满足条件尽早抛出错误\n  if (!name){ \n      throw new Error('没有传递name参数');\n  }\n}\n```\n## 函数的出参\n对象作为返回值，更便于以后添加返回值，以及更改返回值的顺序，相对于数组更加的灵活，更便于扩展\n```js\n// 函数返回多个值，推荐使用对象作为函数的返回值\n// commonly\nfunction processInput(input) {\n  return [left, right, top, bottom];\n}\n\n// grace\nfunction processInput(input) {\n  return { left, right, top, bottom };\n}\nconst { left, right } = processInput(input);\n```\n## 立即执行函数\n立即执行函数也推荐写成箭头函数的形式。首先是因为更简洁，并且也绑定好 this（箭头函数不会去改变this的指向）。\n```js\n(() => {\n  console.log('立即执行函数');\n})();\n```\n## 优先使用函数式编程\n```js\n// difference\nfor(i = 1; i <= 10; i++) {\n   a[i] = a[i] +1;\n}\n// grace\nlet b = a.map(item => ++item) //是不是更简洁了\n```\n## 函数中过多的采用if else\n```js\n// commonly\nif (a === 1) {\n    //...\n} else if (a ===2) {\n   // ...\n} else if (a === 3) {\n    //...\n} else {\n   //...\n}\n    \n// 一般\nswitch(a) {\n    case 1:\n        //....\n    case 2:\n        //....\n    case 3:\n        //....\n    default:\n    //....\n}\n\n// grace ===》》》 Object\nconst fruit = {\n    1: ['1', '11'],\n    2: ['2', '22'],\n    3: ['3', '33']\n };\nlet test = (a) => {\n  return fruit[a] || [];\n}\n\n// grace ===》》》 Map\nconst fruit = newMap()\n  .set('张三', ['张三丰', '张三力'])\n  .set('李四', ['李思维', '李素丽'])\nlet test = (a) => {\n\treturn fruit.get(a) || [];\n}\n\n// grace ===》》》filter\nconst fruits = [\n    { name: '张三', work: 'js' }, \n    { name: '李四', work: 'php' }, \n    { name: '王五', work: 'java' }, \n];\nlet test = (a) => {\n  return fruits.filter(item => item.name === a);\n}\n\n// grace===》》》策略模式\nlet handler = {\n    1: () => {\n        //....\n    },\n    2: () => {\n        //....\n    },\n    3: () => {\n        //....\n    },\n    default: () => {\n        //....\n    }\n}\nhandler[a]() || handler['default']()\n```\n## 温馨小提示\n一个函数完成一个独立的功能，不要一个函数混杂多个功能，在项目开发中有一条非常重要的原则【单一原则】所谓的单一原则就是，一个函数（文件），只做一件事情，在开发当中，没有那个项目是开发完成之后，就结束了。需要不断的更新，维护，那么单一原则，就是为了方便开发，和维护的，不要让一个函数“又当爹，又当妈”，这样代码的耦合性太高了，不好维护\n## 其他\n### 判断数组长度\n```js\n// difference\nif (arr.length !== 0) {\n    //...\n}\n\n// grace\nif (arr.length) {\n    //...\n}\n\n\n// difference\nif (arr.length === 0) {\n    //...\n}\n\n// grace\nif (!arr.length) {\n    //...\n}\n```\n### 逻辑运算符\n```js\nif (a === 1) {\n    b()\n}\n//可以写成\na === 1 && b()\n\nconst arr = [1,2,3];\nif(!arr.length){\n   b()\n }\n//可以写出\narr.length || b()\n\n// &&判断依赖的键是否存在，防止报错'xxx of undfined'\nlet user = {\n    name: 'Symbol卢',\n    age: 18,\n    children: {\n        name: '小Symbol卢'\n    }\n}\nlet childrenName = user.children && user.childre.name\n```\n### 三目运算符\n```js\n// difference\nconst a = '';\nlet b;\nif( a === '' ){\n    b = 'no'\n} else {\n    b = 'ok'\n}\n\nconst a = ''\nlet b = a ? 'no' : 'ok'; // 'ok'\n```\n### 函数定义\n```js\n/**\n * @description: 数据类型的检测的第二种方式\n * @param {any} data 要检测数据类型的变量\n * @return {string} type 返回具体的类型名称【小写】\n */\nexport const isTypeOf = (data) => {\n    return Object.prototype.toString.call(data).replace(/\\[object (\\w+)\\]/, '$1').toLowerCase()\n}\n```\n### 使用 Array.includes 来处理多重 || 条件\n```js\n// difference\nif (a === 1 || a === 2 || a === 3 || a === 4) {\n    //...\n}\n// grace\nlet arr = [1, 2, 3, 4]\nif (arr.includes(a)) {\n    //...\n}\n```\n### 使用 Array.every 和 Array.some 来处理全部/部分满足条件\n```js\n// grace\nconst users = [\n    { name: '张三', sex:1 },\n    { name: '李四', sex:2 },\n    { name: '王五', sex:1 }\n  ];\nfunction test() {\n  // 条件：（简短形式）所有的用户都必须是女\n  const isAllGirl = users.every(item => item.sex === 1);\n  // 条件：至少一个用户是男的\n  const isAnyMan = users.some(item => item.sex === 2);\n}\n```\n### 使用正则表达式\n```js\nconst imgType ='jpg'\nif(imgType === 'jpg' || imgType === 'png' || imgType === 'gif'){\n    console.log('is image')\n}\n// 使用match匹配正则表达式\nif(imgType.match(/.*?(gif|png|jpg)/gi)){\n    console.log('is image')\n}\n```\n### 连接字符串\n```js\nlet name = 'Symbol'\nlet message = 'Hello,I\\'m' + name + 'take care '// 采用传统加号，看着很冗余,且容易出错\n// 艾玛，模板字符香，真想\nlet message = `Hello,I'm ${name} take care `\n```","source":"_posts/如何让你的代码更优雅.md","raw":"---\ntitle: 如何让你的代码更优雅\ntags: 优雅\ncategories: 前端\nabbrlink: 932a8af7\ndate: 2022-01-08 16:35:04\n---\n## 常量赋值\n### 引用数据类型\n包括接口中返回的数据，要做好兜底\n```js\nlet lastName = fullName[1] || ''\nlet propertyValue=Object.attr || 0\n```\n### 指明类型\n要按强类型风格写代码定义变量的时候要指明类型，并且在变量声明之后，不要随意的去更改变量的数据类型\n```js\n// 假设声明三个变量a,b,c\nlet a,b,c; // difference，定义变量时没有指明类型\nlet a = \"\", b = [], c = {}; // good\n```\n## 逻辑判断\n### `==`逻辑判断注意\n`==` 表示只要值相等即为真，`===` 要求不仅值相等，而且也要求类型相同\n使用== 有时候会达不到预期的结果，埋下隐患\n```js\n0  == ''          // true\n0  == '0'         // true\n'' == 0           // true\n'' == '0'         // false\nfalse == '0'        // true\nfalse == 'false'    // false\nfalse == undefined  // false\nfalse == null       // false\nnull == undefined   // true\ntrue == 1           // true\n```\n### 数据类型不确定\n如果变量的数据类型不确定，那咱就手动的转换一下，让它确定\n```js\nlet total = \"6\";\nif(parseInt(total) === 6){} // grace 手动转换一下数据类型\n```\n<!--more-->\n## 数组\n### 数组拷贝\n```js\nlet items=['1','2','3'];\nconst itemCopy = [...items]\n// joining arrays \nconst odd = [1, 3, 5 ]; \nconst nums = [2 ,4 , 6, ...odd]; \n```\n### 变量赋值\n```js\nconst Arr = [1, 2, 3, 4];\nconst [first, second] = Arr; \n```\n## 函数的命名\n 返回布尔值函数应以is/can/has等单词开头，能够让人更直观的了解到这个函数的功能；获取接口中的数据使用get开头进行命名,动作函数要以动词开头。\n```js\n// grace\nlet isSupport = () => {};\nlet canUpdate = () => {};\nlet geUserInfo = (user) => {}\nlet setUserInfo = (user) => {}\n```\n## 优先使用箭头函数\n```js\n// grace 是不是看着更简介优雅了\nlet findAge = (arr, age)=> arr.filter(num => num === age)\n```\n## 函数的入参\n函数的入参，是能够让使用者，在调用这个函数的时候，能够更加的清晰明了的把这个函数所需要的参数传递给函数，不容易出现，参数传递错误（参数的顺序颠倒等）一些低级，而又不好查找的问题\n```js\n// difference\n// true和false啥意思，没有个注释的话，看上去就是一脸懵逼\nfunction getImages(api, true, false); \n// grace\n// 一目了然，知道这些true和false是啥意思\nfunction getImages({\n    imageApi: api,\n    includePageBackground: true, \n    compress: false,\n})\n```\n## 接收参数\n如果函数的的参数是对象，也要优先使用解构赋值，上代码\n```js\n// 假设现在的场景是获取用户的信息上的现用名，和曾用名\n// difference\nfunction getFullName(user) {\n  const firstName = user.firstName;\n  const lastName = user.lastName;\n}\n\n// commonly\nfunction getFullName(obj) {\n  const { firstName, lastName } = obj;\n}\n\n// grace\nfunction getFullName({ firstName, lastName }) {\n}\n\n// grace 给它个默认值\nfunction getFullName({firstName, lastName = '无'}) {\n}\n \n// 觉得参数的名称太长，咱再来个重命名  解构时重命名简化命名\n// grace\nfunction getFullName ({firstName: first, lastName: last}) {\n \n}\n```\n## 参数效验\n更少的嵌套，不满足条件尽早 return，尽可能的减少嵌套，嵌套的层级越少，函数看着越简洁优雅\n```js\nfunction test(name, sex = 1) {\n  // 不满足条件尽早抛出错误\n  if (!name){ \n      throw new Error('没有传递name参数');\n  }\n}\n```\n## 函数的出参\n对象作为返回值，更便于以后添加返回值，以及更改返回值的顺序，相对于数组更加的灵活，更便于扩展\n```js\n// 函数返回多个值，推荐使用对象作为函数的返回值\n// commonly\nfunction processInput(input) {\n  return [left, right, top, bottom];\n}\n\n// grace\nfunction processInput(input) {\n  return { left, right, top, bottom };\n}\nconst { left, right } = processInput(input);\n```\n## 立即执行函数\n立即执行函数也推荐写成箭头函数的形式。首先是因为更简洁，并且也绑定好 this（箭头函数不会去改变this的指向）。\n```js\n(() => {\n  console.log('立即执行函数');\n})();\n```\n## 优先使用函数式编程\n```js\n// difference\nfor(i = 1; i <= 10; i++) {\n   a[i] = a[i] +1;\n}\n// grace\nlet b = a.map(item => ++item) //是不是更简洁了\n```\n## 函数中过多的采用if else\n```js\n// commonly\nif (a === 1) {\n    //...\n} else if (a ===2) {\n   // ...\n} else if (a === 3) {\n    //...\n} else {\n   //...\n}\n    \n// 一般\nswitch(a) {\n    case 1:\n        //....\n    case 2:\n        //....\n    case 3:\n        //....\n    default:\n    //....\n}\n\n// grace ===》》》 Object\nconst fruit = {\n    1: ['1', '11'],\n    2: ['2', '22'],\n    3: ['3', '33']\n };\nlet test = (a) => {\n  return fruit[a] || [];\n}\n\n// grace ===》》》 Map\nconst fruit = newMap()\n  .set('张三', ['张三丰', '张三力'])\n  .set('李四', ['李思维', '李素丽'])\nlet test = (a) => {\n\treturn fruit.get(a) || [];\n}\n\n// grace ===》》》filter\nconst fruits = [\n    { name: '张三', work: 'js' }, \n    { name: '李四', work: 'php' }, \n    { name: '王五', work: 'java' }, \n];\nlet test = (a) => {\n  return fruits.filter(item => item.name === a);\n}\n\n// grace===》》》策略模式\nlet handler = {\n    1: () => {\n        //....\n    },\n    2: () => {\n        //....\n    },\n    3: () => {\n        //....\n    },\n    default: () => {\n        //....\n    }\n}\nhandler[a]() || handler['default']()\n```\n## 温馨小提示\n一个函数完成一个独立的功能，不要一个函数混杂多个功能，在项目开发中有一条非常重要的原则【单一原则】所谓的单一原则就是，一个函数（文件），只做一件事情，在开发当中，没有那个项目是开发完成之后，就结束了。需要不断的更新，维护，那么单一原则，就是为了方便开发，和维护的，不要让一个函数“又当爹，又当妈”，这样代码的耦合性太高了，不好维护\n## 其他\n### 判断数组长度\n```js\n// difference\nif (arr.length !== 0) {\n    //...\n}\n\n// grace\nif (arr.length) {\n    //...\n}\n\n\n// difference\nif (arr.length === 0) {\n    //...\n}\n\n// grace\nif (!arr.length) {\n    //...\n}\n```\n### 逻辑运算符\n```js\nif (a === 1) {\n    b()\n}\n//可以写成\na === 1 && b()\n\nconst arr = [1,2,3];\nif(!arr.length){\n   b()\n }\n//可以写出\narr.length || b()\n\n// &&判断依赖的键是否存在，防止报错'xxx of undfined'\nlet user = {\n    name: 'Symbol卢',\n    age: 18,\n    children: {\n        name: '小Symbol卢'\n    }\n}\nlet childrenName = user.children && user.childre.name\n```\n### 三目运算符\n```js\n// difference\nconst a = '';\nlet b;\nif( a === '' ){\n    b = 'no'\n} else {\n    b = 'ok'\n}\n\nconst a = ''\nlet b = a ? 'no' : 'ok'; // 'ok'\n```\n### 函数定义\n```js\n/**\n * @description: 数据类型的检测的第二种方式\n * @param {any} data 要检测数据类型的变量\n * @return {string} type 返回具体的类型名称【小写】\n */\nexport const isTypeOf = (data) => {\n    return Object.prototype.toString.call(data).replace(/\\[object (\\w+)\\]/, '$1').toLowerCase()\n}\n```\n### 使用 Array.includes 来处理多重 || 条件\n```js\n// difference\nif (a === 1 || a === 2 || a === 3 || a === 4) {\n    //...\n}\n// grace\nlet arr = [1, 2, 3, 4]\nif (arr.includes(a)) {\n    //...\n}\n```\n### 使用 Array.every 和 Array.some 来处理全部/部分满足条件\n```js\n// grace\nconst users = [\n    { name: '张三', sex:1 },\n    { name: '李四', sex:2 },\n    { name: '王五', sex:1 }\n  ];\nfunction test() {\n  // 条件：（简短形式）所有的用户都必须是女\n  const isAllGirl = users.every(item => item.sex === 1);\n  // 条件：至少一个用户是男的\n  const isAnyMan = users.some(item => item.sex === 2);\n}\n```\n### 使用正则表达式\n```js\nconst imgType ='jpg'\nif(imgType === 'jpg' || imgType === 'png' || imgType === 'gif'){\n    console.log('is image')\n}\n// 使用match匹配正则表达式\nif(imgType.match(/.*?(gif|png|jpg)/gi)){\n    console.log('is image')\n}\n```\n### 连接字符串\n```js\nlet name = 'Symbol'\nlet message = 'Hello,I\\'m' + name + 'take care '// 采用传统加号，看着很冗余,且容易出错\n// 艾玛，模板字符香，真想\nlet message = `Hello,I'm ${name} take care `\n```","slug":"如何让你的代码更优雅","published":1,"updated":"2022-01-09T09:36:55.915Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky79u00q0009qcl3g3mn0n7i","content":"<h2 id=\"常量赋值\"><a href=\"#常量赋值\" class=\"headerlink\" title=\"常量赋值\"></a>常量赋值</h2><h3 id=\"引用数据类型\"><a href=\"#引用数据类型\" class=\"headerlink\" title=\"引用数据类型\"></a>引用数据类型</h3><p>包括接口中返回的数据，要做好兜底</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> lastName = fullName[<span class=\"number\">1</span>] || <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> propertyValue=<span class=\"built_in\">Object</span>.attr || <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"指明类型\"><a href=\"#指明类型\" class=\"headerlink\" title=\"指明类型\"></a>指明类型</h3><p>要按强类型风格写代码定义变量的时候要指明类型，并且在变量声明之后，不要随意的去更改变量的数据类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假设声明三个变量a,b,c</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a,b,c; <span class=\"comment\">// difference，定义变量时没有指明类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">&quot;&quot;</span>, b = [], c = &#123;&#125;; <span class=\"comment\">// good</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"逻辑判断\"><a href=\"#逻辑判断\" class=\"headerlink\" title=\"逻辑判断\"></a>逻辑判断</h2><h3 id=\"逻辑判断注意\"><a href=\"#逻辑判断注意\" class=\"headerlink\" title=\"==逻辑判断注意\"></a><code>==</code>逻辑判断注意</h3><p><code>==</code> 表示只要值相等即为真，<code>===</code> 要求不仅值相等，而且也要求类型相同<br>使用== 有时候会达不到预期的结果，埋下隐患</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0</span>  == <span class=\"string\">&#x27;&#x27;</span>          <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"number\">0</span>  == <span class=\"string\">&#x27;0&#x27;</span>         <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span> == <span class=\"number\">0</span>           <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span> == <span class=\"string\">&#x27;0&#x27;</span>         <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"literal\">false</span> == <span class=\"string\">&#x27;0&#x27;</span>        <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"literal\">false</span> == <span class=\"string\">&#x27;false&#x27;</span>    <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"literal\">false</span> == <span class=\"literal\">undefined</span>  <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"literal\">false</span> == <span class=\"literal\">null</span>       <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"literal\">null</span> == <span class=\"literal\">undefined</span>   <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"literal\">true</span> == <span class=\"number\">1</span>           <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"数据类型不确定\"><a href=\"#数据类型不确定\" class=\"headerlink\" title=\"数据类型不确定\"></a>数据类型不确定</h3><p>如果变量的数据类型不确定，那咱就手动的转换一下，让它确定</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> total = <span class=\"string\">&quot;6&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">parseInt</span>(total) === <span class=\"number\">6</span>)&#123;&#125; <span class=\"comment\">// grace 手动转换一下数据类型</span></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><h3 id=\"数组拷贝\"><a href=\"#数组拷贝\" class=\"headerlink\" title=\"数组拷贝\"></a>数组拷贝</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> items=[<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"string\">&#x27;2&#x27;</span>,<span class=\"string\">&#x27;3&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> itemCopy = [...items]</span><br><span class=\"line\"><span class=\"comment\">// joining arrays </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> odd = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span> ]; </span><br><span class=\"line\"><span class=\"keyword\">const</span> nums = [<span class=\"number\">2</span> ,<span class=\"number\">4</span> , <span class=\"number\">6</span>, ...odd]; </span><br></pre></td></tr></table></figure>\n<h3 id=\"变量赋值\"><a href=\"#变量赋值\" class=\"headerlink\" title=\"变量赋值\"></a>变量赋值</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> [first, second] = Arr; </span><br></pre></td></tr></table></figure>\n<h2 id=\"函数的命名\"><a href=\"#函数的命名\" class=\"headerlink\" title=\"函数的命名\"></a>函数的命名</h2><p> 返回布尔值函数应以is/can/has等单词开头，能够让人更直观的了解到这个函数的功能；获取接口中的数据使用get开头进行命名,动作函数要以动词开头。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> isSupport = <span class=\"function\">() =&gt;</span> &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> canUpdate = <span class=\"function\">() =&gt;</span> &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> geUserInfo = <span class=\"function\">(<span class=\"params\">user</span>) =&gt;</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> setUserInfo = <span class=\"function\">(<span class=\"params\">user</span>) =&gt;</span> &#123;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"优先使用箭头函数\"><a href=\"#优先使用箭头函数\" class=\"headerlink\" title=\"优先使用箭头函数\"></a>优先使用箭头函数</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// grace 是不是看着更简介优雅了</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> findAge = <span class=\"function\">(<span class=\"params\">arr, age</span>)=&gt;</span> arr.filter(<span class=\"function\"><span class=\"params\">num</span> =&gt;</span> num === age)</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数的入参\"><a href=\"#函数的入参\" class=\"headerlink\" title=\"函数的入参\"></a>函数的入参</h2><p>函数的入参，是能够让使用者，在调用这个函数的时候，能够更加的清晰明了的把这个函数所需要的参数传递给函数，不容易出现，参数传递错误（参数的顺序颠倒等）一些低级，而又不好查找的问题</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"comment\">// true和false啥意思，没有个注释的话，看上去就是一脸懵逼</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getImages</span>(<span class=\"params\">api, <span class=\"literal\">true</span>, <span class=\"literal\">false</span></span>)</span>; </span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"comment\">// 一目了然，知道这些true和false是啥意思</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getImages</span>(<span class=\"params\">&#123;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    imageApi: api,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    includePageBackground: <span class=\"literal\">true</span>, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    compress: <span class=\"literal\">false</span>,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">&#125;</span>)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"接收参数\"><a href=\"#接收参数\" class=\"headerlink\" title=\"接收参数\"></a>接收参数</h2><p>如果函数的的参数是对象，也要优先使用解构赋值，上代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假设现在的场景是获取用户的信息上的现用名，和曾用名</span></span><br><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">user</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> firstName = user.firstName;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> lastName = user.lastName;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// commonly</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; firstName, lastName &#125; = obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">&#123; firstName, lastName &#125;</span>) </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace 给它个默认值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">&#123;firstName, lastName = <span class=\"string\">&#x27;无&#x27;</span>&#125;</span>) </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 觉得参数的名称太长，咱再来个重命名  解构时重命名简化命名</span></span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span> (<span class=\"params\">&#123;firstName: first, lastName: last&#125;</span>) </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参数效验\"><a href=\"#参数效验\" class=\"headerlink\" title=\"参数效验\"></a>参数效验</h2><p>更少的嵌套，不满足条件尽早 return，尽可能的减少嵌套，嵌套的层级越少，函数看着越简洁优雅</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">name, sex = <span class=\"number\">1</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 不满足条件尽早抛出错误</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!name)&#123; </span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;没有传递name参数&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数的出参\"><a href=\"#函数的出参\" class=\"headerlink\" title=\"函数的出参\"></a>函数的出参</h2><p>对象作为返回值，更便于以后添加返回值，以及更改返回值的顺序，相对于数组更加的灵活，更便于扩展</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数返回多个值，推荐使用对象作为函数的返回值</span></span><br><span class=\"line\"><span class=\"comment\">// commonly</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">processInput</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [left, right, top, bottom];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">processInput</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; left, right, top, bottom &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; left, right &#125; = processInput(input);</span><br></pre></td></tr></table></figure>\n<h2 id=\"立即执行函数\"><a href=\"#立即执行函数\" class=\"headerlink\" title=\"立即执行函数\"></a>立即执行函数</h2><p>立即执行函数也推荐写成箭头函数的形式。首先是因为更简洁，并且也绑定好 this（箭头函数不会去改变this的指向）。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;立即执行函数&#x27;</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<h2 id=\"优先使用函数式编程\"><a href=\"#优先使用函数式编程\" class=\"headerlink\" title=\"优先使用函数式编程\"></a>优先使用函数式编程</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">   a[i] = a[i] +<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = a.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> ++item) <span class=\"comment\">//是不是更简洁了</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"函数中过多的采用if-else\"><a href=\"#函数中过多的采用if-else\" class=\"headerlink\" title=\"函数中过多的采用if else\"></a>函数中过多的采用if else</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// commonly</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a ===<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a === <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 一般</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(a) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"comment\">//....</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace ===》》》 Object</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fruit = &#123;</span><br><span class=\"line\">    <span class=\"number\">1</span>: [<span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;11&#x27;</span>],</span><br><span class=\"line\">    <span class=\"number\">2</span>: [<span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;22&#x27;</span>],</span><br><span class=\"line\">    <span class=\"number\">3</span>: [<span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;33&#x27;</span>]</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"function\">(<span class=\"params\">a</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fruit[a] || [];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace ===》》》 Map</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fruit = newMap()</span><br><span class=\"line\">  .set(<span class=\"string\">&#x27;张三&#x27;</span>, [<span class=\"string\">&#x27;张三丰&#x27;</span>, <span class=\"string\">&#x27;张三力&#x27;</span>])</span><br><span class=\"line\">  .set(<span class=\"string\">&#x27;李四&#x27;</span>, [<span class=\"string\">&#x27;李思维&#x27;</span>, <span class=\"string\">&#x27;李素丽&#x27;</span>])</span><br><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"function\">(<span class=\"params\">a</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> fruit.get(a) || [];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace ===》》》filter</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fruits = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"attr\">work</span>: <span class=\"string\">&#x27;js&#x27;</span> &#125;, </span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"attr\">work</span>: <span class=\"string\">&#x27;php&#x27;</span> &#125;, </span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"attr\">work</span>: <span class=\"string\">&#x27;java&#x27;</span> &#125;, </span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"function\">(<span class=\"params\">a</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fruits.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.name === a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace===》》》策略模式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> handler = &#123;</span><br><span class=\"line\">    <span class=\"number\">1</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"number\">2</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"number\">3</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">handler[a]() || handler[<span class=\"string\">&#x27;default&#x27;</span>]()</span><br></pre></td></tr></table></figure>\n<h2 id=\"温馨小提示\"><a href=\"#温馨小提示\" class=\"headerlink\" title=\"温馨小提示\"></a>温馨小提示</h2><p>一个函数完成一个独立的功能，不要一个函数混杂多个功能，在项目开发中有一条非常重要的原则【单一原则】所谓的单一原则就是，一个函数（文件），只做一件事情，在开发当中，没有那个项目是开发完成之后，就结束了。需要不断的更新，维护，那么单一原则，就是为了方便开发，和维护的，不要让一个函数“又当爹，又当妈”，这样代码的耦合性太高了，不好维护</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"判断数组长度\"><a href=\"#判断数组长度\" class=\"headerlink\" title=\"判断数组长度\"></a>判断数组长度</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (arr.length !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (arr.length) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (arr.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!arr.length) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (a === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    b()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//可以写成</span></span><br><span class=\"line\">a === <span class=\"number\">1</span> &amp;&amp; b()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!arr.length)&#123;</span><br><span class=\"line\">   b()</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"comment\">//可以写出</span></span><br><span class=\"line\">arr.length || b()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &amp;&amp;判断依赖的键是否存在，防止报错&#x27;xxx of undfined&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Symbol卢&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">    <span class=\"attr\">children</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小Symbol卢&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> childrenName = user.children &amp;&amp; user.childre.name</span><br></pre></td></tr></table></figure>\n<h3 id=\"三目运算符\"><a href=\"#三目运算符\" class=\"headerlink\" title=\"三目运算符\"></a>三目运算符</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> b;</span><br><span class=\"line\"><span class=\"keyword\">if</span>( a === <span class=\"string\">&#x27;&#x27;</span> )&#123;</span><br><span class=\"line\">    b = <span class=\"string\">&#x27;no&#x27;</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    b = <span class=\"string\">&#x27;ok&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = a ? <span class=\"string\">&#x27;no&#x27;</span> : <span class=\"string\">&#x27;ok&#x27;</span>; <span class=\"comment\">// &#x27;ok&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"函数定义\"><a href=\"#函数定义\" class=\"headerlink\" title=\"函数定义\"></a>函数定义</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>: 数据类型的检测的第二种方式</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;any&#125;</span> </span>data 要检测数据类型的变量</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;string&#125;</span> </span>type 返回具体的类型名称【小写】</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> isTypeOf = <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.prototype.toString.call(data).replace(<span class=\"regexp\">/\\[object (\\w+)\\]/</span>, <span class=\"string\">&#x27;$1&#x27;</span>).toLowerCase()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用-Array-includes-来处理多重-条件\"><a href=\"#使用-Array-includes-来处理多重-条件\" class=\"headerlink\" title=\"使用 Array.includes 来处理多重 || 条件\"></a>使用 Array.includes 来处理多重 || 条件</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a === <span class=\"number\">1</span> || a === <span class=\"number\">2</span> || a === <span class=\"number\">3</span> || a === <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">if</span> (arr.includes(a)) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用-Array-every-和-Array-some-来处理全部-部分满足条件\"><a href=\"#使用-Array-every-和-Array-some-来处理全部-部分满足条件\" class=\"headerlink\" title=\"使用 Array.every 和 Array.some 来处理全部/部分满足条件\"></a>使用 Array.every 和 Array.some 来处理全部/部分满足条件</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> users = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"attr\">sex</span>:<span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"attr\">sex</span>:<span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"attr\">sex</span>:<span class=\"number\">1</span> &#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 条件：（简短形式）所有的用户都必须是女</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> isAllGirl = users.every(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.sex === <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 条件：至少一个用户是男的</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> isAnyMan = users.some(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.sex === <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用正则表达式\"><a href=\"#使用正则表达式\" class=\"headerlink\" title=\"使用正则表达式\"></a>使用正则表达式</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> imgType =<span class=\"string\">&#x27;jpg&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(imgType === <span class=\"string\">&#x27;jpg&#x27;</span> || imgType === <span class=\"string\">&#x27;png&#x27;</span> || imgType === <span class=\"string\">&#x27;gif&#x27;</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;is image&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 使用match匹配正则表达式</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(imgType.match(<span class=\"regexp\">/.*?(gif|png|jpg)/gi</span>))&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;is image&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"连接字符串\"><a href=\"#连接字符串\" class=\"headerlink\" title=\"连接字符串\"></a>连接字符串</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;Symbol&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> message = <span class=\"string\">&#x27;Hello,I\\&#x27;m&#x27;</span> + name + <span class=\"string\">&#x27;take care &#x27;</span><span class=\"comment\">// 采用传统加号，看着很冗余,且容易出错</span></span><br><span class=\"line\"><span class=\"comment\">// 艾玛，模板字符香，真想</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> message = <span class=\"string\">`Hello,I&#x27;m <span class=\"subst\">$&#123;name&#125;</span> take care `</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"常量赋值\"><a href=\"#常量赋值\" class=\"headerlink\" title=\"常量赋值\"></a>常量赋值</h2><h3 id=\"引用数据类型\"><a href=\"#引用数据类型\" class=\"headerlink\" title=\"引用数据类型\"></a>引用数据类型</h3><p>包括接口中返回的数据，要做好兜底</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> lastName = fullName[<span class=\"number\">1</span>] || <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> propertyValue=<span class=\"built_in\">Object</span>.attr || <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"指明类型\"><a href=\"#指明类型\" class=\"headerlink\" title=\"指明类型\"></a>指明类型</h3><p>要按强类型风格写代码定义变量的时候要指明类型，并且在变量声明之后，不要随意的去更改变量的数据类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假设声明三个变量a,b,c</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a,b,c; <span class=\"comment\">// difference，定义变量时没有指明类型</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">&quot;&quot;</span>, b = [], c = &#123;&#125;; <span class=\"comment\">// good</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"逻辑判断\"><a href=\"#逻辑判断\" class=\"headerlink\" title=\"逻辑判断\"></a>逻辑判断</h2><h3 id=\"逻辑判断注意\"><a href=\"#逻辑判断注意\" class=\"headerlink\" title=\"==逻辑判断注意\"></a><code>==</code>逻辑判断注意</h3><p><code>==</code> 表示只要值相等即为真，<code>===</code> 要求不仅值相等，而且也要求类型相同<br>使用== 有时候会达不到预期的结果，埋下隐患</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0</span>  == <span class=\"string\">&#x27;&#x27;</span>          <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"number\">0</span>  == <span class=\"string\">&#x27;0&#x27;</span>         <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span> == <span class=\"number\">0</span>           <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span> == <span class=\"string\">&#x27;0&#x27;</span>         <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"literal\">false</span> == <span class=\"string\">&#x27;0&#x27;</span>        <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"literal\">false</span> == <span class=\"string\">&#x27;false&#x27;</span>    <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"literal\">false</span> == <span class=\"literal\">undefined</span>  <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"literal\">false</span> == <span class=\"literal\">null</span>       <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"literal\">null</span> == <span class=\"literal\">undefined</span>   <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"literal\">true</span> == <span class=\"number\">1</span>           <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"数据类型不确定\"><a href=\"#数据类型不确定\" class=\"headerlink\" title=\"数据类型不确定\"></a>数据类型不确定</h3><p>如果变量的数据类型不确定，那咱就手动的转换一下，让它确定</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> total = <span class=\"string\">&quot;6&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">parseInt</span>(total) === <span class=\"number\">6</span>)&#123;&#125; <span class=\"comment\">// grace 手动转换一下数据类型</span></span><br></pre></td></tr></table></figure>","more":"<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><h3 id=\"数组拷贝\"><a href=\"#数组拷贝\" class=\"headerlink\" title=\"数组拷贝\"></a>数组拷贝</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> items=[<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"string\">&#x27;2&#x27;</span>,<span class=\"string\">&#x27;3&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> itemCopy = [...items]</span><br><span class=\"line\"><span class=\"comment\">// joining arrays </span></span><br><span class=\"line\"><span class=\"keyword\">const</span> odd = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span> ]; </span><br><span class=\"line\"><span class=\"keyword\">const</span> nums = [<span class=\"number\">2</span> ,<span class=\"number\">4</span> , <span class=\"number\">6</span>, ...odd]; </span><br></pre></td></tr></table></figure>\n<h3 id=\"变量赋值\"><a href=\"#变量赋值\" class=\"headerlink\" title=\"变量赋值\"></a>变量赋值</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> [first, second] = Arr; </span><br></pre></td></tr></table></figure>\n<h2 id=\"函数的命名\"><a href=\"#函数的命名\" class=\"headerlink\" title=\"函数的命名\"></a>函数的命名</h2><p> 返回布尔值函数应以is/can/has等单词开头，能够让人更直观的了解到这个函数的功能；获取接口中的数据使用get开头进行命名,动作函数要以动词开头。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> isSupport = <span class=\"function\">() =&gt;</span> &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> canUpdate = <span class=\"function\">() =&gt;</span> &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> geUserInfo = <span class=\"function\">(<span class=\"params\">user</span>) =&gt;</span> &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> setUserInfo = <span class=\"function\">(<span class=\"params\">user</span>) =&gt;</span> &#123;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"优先使用箭头函数\"><a href=\"#优先使用箭头函数\" class=\"headerlink\" title=\"优先使用箭头函数\"></a>优先使用箭头函数</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// grace 是不是看着更简介优雅了</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> findAge = <span class=\"function\">(<span class=\"params\">arr, age</span>)=&gt;</span> arr.filter(<span class=\"function\"><span class=\"params\">num</span> =&gt;</span> num === age)</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数的入参\"><a href=\"#函数的入参\" class=\"headerlink\" title=\"函数的入参\"></a>函数的入参</h2><p>函数的入参，是能够让使用者，在调用这个函数的时候，能够更加的清晰明了的把这个函数所需要的参数传递给函数，不容易出现，参数传递错误（参数的顺序颠倒等）一些低级，而又不好查找的问题</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"comment\">// true和false啥意思，没有个注释的话，看上去就是一脸懵逼</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getImages</span>(<span class=\"params\">api, <span class=\"literal\">true</span>, <span class=\"literal\">false</span></span>)</span>; </span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"comment\">// 一目了然，知道这些true和false是啥意思</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getImages</span>(<span class=\"params\">&#123;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    imageApi: api,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    includePageBackground: <span class=\"literal\">true</span>, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    compress: <span class=\"literal\">false</span>,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">&#125;</span>)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"接收参数\"><a href=\"#接收参数\" class=\"headerlink\" title=\"接收参数\"></a>接收参数</h2><p>如果函数的的参数是对象，也要优先使用解构赋值，上代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假设现在的场景是获取用户的信息上的现用名，和曾用名</span></span><br><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">user</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> firstName = user.firstName;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> lastName = user.lastName;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// commonly</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; firstName, lastName &#125; = obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">&#123; firstName, lastName &#125;</span>) </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace 给它个默认值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">&#123;firstName, lastName = <span class=\"string\">&#x27;无&#x27;</span>&#125;</span>) </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 觉得参数的名称太长，咱再来个重命名  解构时重命名简化命名</span></span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span> (<span class=\"params\">&#123;firstName: first, lastName: last&#125;</span>) </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参数效验\"><a href=\"#参数效验\" class=\"headerlink\" title=\"参数效验\"></a>参数效验</h2><p>更少的嵌套，不满足条件尽早 return，尽可能的减少嵌套，嵌套的层级越少，函数看着越简洁优雅</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">name, sex = <span class=\"number\">1</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 不满足条件尽早抛出错误</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!name)&#123; </span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;没有传递name参数&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数的出参\"><a href=\"#函数的出参\" class=\"headerlink\" title=\"函数的出参\"></a>函数的出参</h2><p>对象作为返回值，更便于以后添加返回值，以及更改返回值的顺序，相对于数组更加的灵活，更便于扩展</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数返回多个值，推荐使用对象作为函数的返回值</span></span><br><span class=\"line\"><span class=\"comment\">// commonly</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">processInput</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [left, right, top, bottom];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">processInput</span>(<span class=\"params\">input</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; left, right, top, bottom &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; left, right &#125; = processInput(input);</span><br></pre></td></tr></table></figure>\n<h2 id=\"立即执行函数\"><a href=\"#立即执行函数\" class=\"headerlink\" title=\"立即执行函数\"></a>立即执行函数</h2><p>立即执行函数也推荐写成箭头函数的形式。首先是因为更简洁，并且也绑定好 this（箭头函数不会去改变this的指向）。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;立即执行函数&#x27;</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<h2 id=\"优先使用函数式编程\"><a href=\"#优先使用函数式编程\" class=\"headerlink\" title=\"优先使用函数式编程\"></a>优先使用函数式编程</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">   a[i] = a[i] +<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = a.map(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> ++item) <span class=\"comment\">//是不是更简洁了</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"函数中过多的采用if-else\"><a href=\"#函数中过多的采用if-else\" class=\"headerlink\" title=\"函数中过多的采用if else\"></a>函数中过多的采用if else</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// commonly</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a ===<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a === <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 一般</span></span><br><span class=\"line\"><span class=\"keyword\">switch</span>(a) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    <span class=\"comment\">//....</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace ===》》》 Object</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fruit = &#123;</span><br><span class=\"line\">    <span class=\"number\">1</span>: [<span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;11&#x27;</span>],</span><br><span class=\"line\">    <span class=\"number\">2</span>: [<span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;22&#x27;</span>],</span><br><span class=\"line\">    <span class=\"number\">3</span>: [<span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;33&#x27;</span>]</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"function\">(<span class=\"params\">a</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fruit[a] || [];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace ===》》》 Map</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fruit = newMap()</span><br><span class=\"line\">  .set(<span class=\"string\">&#x27;张三&#x27;</span>, [<span class=\"string\">&#x27;张三丰&#x27;</span>, <span class=\"string\">&#x27;张三力&#x27;</span>])</span><br><span class=\"line\">  .set(<span class=\"string\">&#x27;李四&#x27;</span>, [<span class=\"string\">&#x27;李思维&#x27;</span>, <span class=\"string\">&#x27;李素丽&#x27;</span>])</span><br><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"function\">(<span class=\"params\">a</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> fruit.get(a) || [];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace ===》》》filter</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fruits = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"attr\">work</span>: <span class=\"string\">&#x27;js&#x27;</span> &#125;, </span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"attr\">work</span>: <span class=\"string\">&#x27;php&#x27;</span> &#125;, </span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"attr\">work</span>: <span class=\"string\">&#x27;java&#x27;</span> &#125;, </span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"function\">(<span class=\"params\">a</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fruits.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.name === a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace===》》》策略模式</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> handler = &#123;</span><br><span class=\"line\">    <span class=\"number\">1</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"number\">2</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"number\">3</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">default</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//....</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">handler[a]() || handler[<span class=\"string\">&#x27;default&#x27;</span>]()</span><br></pre></td></tr></table></figure>\n<h2 id=\"温馨小提示\"><a href=\"#温馨小提示\" class=\"headerlink\" title=\"温馨小提示\"></a>温馨小提示</h2><p>一个函数完成一个独立的功能，不要一个函数混杂多个功能，在项目开发中有一条非常重要的原则【单一原则】所谓的单一原则就是，一个函数（文件），只做一件事情，在开发当中，没有那个项目是开发完成之后，就结束了。需要不断的更新，维护，那么单一原则，就是为了方便开发，和维护的，不要让一个函数“又当爹，又当妈”，这样代码的耦合性太高了，不好维护</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"判断数组长度\"><a href=\"#判断数组长度\" class=\"headerlink\" title=\"判断数组长度\"></a>判断数组长度</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (arr.length !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (arr.length) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (arr.length === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!arr.length) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (a === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    b()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//可以写成</span></span><br><span class=\"line\">a === <span class=\"number\">1</span> &amp;&amp; b()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!arr.length)&#123;</span><br><span class=\"line\">   b()</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"comment\">//可以写出</span></span><br><span class=\"line\">arr.length || b()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &amp;&amp;判断依赖的键是否存在，防止报错&#x27;xxx of undfined&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> user = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Symbol卢&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">    <span class=\"attr\">children</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小Symbol卢&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> childrenName = user.children &amp;&amp; user.childre.name</span><br></pre></td></tr></table></figure>\n<h3 id=\"三目运算符\"><a href=\"#三目运算符\" class=\"headerlink\" title=\"三目运算符\"></a>三目运算符</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> b;</span><br><span class=\"line\"><span class=\"keyword\">if</span>( a === <span class=\"string\">&#x27;&#x27;</span> )&#123;</span><br><span class=\"line\">    b = <span class=\"string\">&#x27;no&#x27;</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    b = <span class=\"string\">&#x27;ok&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = a ? <span class=\"string\">&#x27;no&#x27;</span> : <span class=\"string\">&#x27;ok&#x27;</span>; <span class=\"comment\">// &#x27;ok&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"函数定义\"><a href=\"#函数定义\" class=\"headerlink\" title=\"函数定义\"></a>函数定义</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>: 数据类型的检测的第二种方式</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;any&#125;</span> </span>data 要检测数据类型的变量</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;string&#125;</span> </span>type 返回具体的类型名称【小写】</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> isTypeOf = <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Object</span>.prototype.toString.call(data).replace(<span class=\"regexp\">/\\[object (\\w+)\\]/</span>, <span class=\"string\">&#x27;$1&#x27;</span>).toLowerCase()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用-Array-includes-来处理多重-条件\"><a href=\"#使用-Array-includes-来处理多重-条件\" class=\"headerlink\" title=\"使用 Array.includes 来处理多重 || 条件\"></a>使用 Array.includes 来处理多重 || 条件</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// difference</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (a === <span class=\"number\">1</span> || a === <span class=\"number\">2</span> || a === <span class=\"number\">3</span> || a === <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">if</span> (arr.includes(a)) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用-Array-every-和-Array-some-来处理全部-部分满足条件\"><a href=\"#使用-Array-every-和-Array-some-来处理全部-部分满足条件\" class=\"headerlink\" title=\"使用 Array.every 和 Array.some 来处理全部/部分满足条件\"></a>使用 Array.every 和 Array.some 来处理全部/部分满足条件</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// grace</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> users = [</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"attr\">sex</span>:<span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"attr\">sex</span>:<span class=\"number\">2</span> &#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"attr\">sex</span>:<span class=\"number\">1</span> &#125;</span><br><span class=\"line\">  ];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 条件：（简短形式）所有的用户都必须是女</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> isAllGirl = users.every(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.sex === <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 条件：至少一个用户是男的</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> isAnyMan = users.some(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.sex === <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用正则表达式\"><a href=\"#使用正则表达式\" class=\"headerlink\" title=\"使用正则表达式\"></a>使用正则表达式</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> imgType =<span class=\"string\">&#x27;jpg&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(imgType === <span class=\"string\">&#x27;jpg&#x27;</span> || imgType === <span class=\"string\">&#x27;png&#x27;</span> || imgType === <span class=\"string\">&#x27;gif&#x27;</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;is image&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 使用match匹配正则表达式</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(imgType.match(<span class=\"regexp\">/.*?(gif|png|jpg)/gi</span>))&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;is image&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"连接字符串\"><a href=\"#连接字符串\" class=\"headerlink\" title=\"连接字符串\"></a>连接字符串</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;Symbol&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> message = <span class=\"string\">&#x27;Hello,I\\&#x27;m&#x27;</span> + name + <span class=\"string\">&#x27;take care &#x27;</span><span class=\"comment\">// 采用传统加号，看着很冗余,且容易出错</span></span><br><span class=\"line\"><span class=\"comment\">// 艾玛，模板字符香，真想</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> message = <span class=\"string\">`Hello,I&#x27;m <span class=\"subst\">$&#123;name&#125;</span> take care `</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cky79u00l0001qcl3ffnp644i","category_id":"cky79u00o0004qcl390sl26l6","_id":"cky79u00q0008qcl36ek98nxg"},{"post_id":"cky79u00q0009qcl3g3mn0n7i","category_id":"cky79u00q000aqcl33yh568xm","_id":"cky79u00r000dqcl33s8h078a"}],"PostTag":[{"post_id":"cky79u00l0001qcl3ffnp644i","tag_id":"cky79u00p0005qcl3b35xdj73","_id":"cky79u00q0007qcl3gmw90xe6"},{"post_id":"cky79u00q0009qcl3g3mn0n7i","tag_id":"cky79u00q000bqcl37umz4j4o","_id":"cky79u00r000cqcl397uo8vpt"}],"Tag":[{"name":"github","_id":"cky79u00p0005qcl3b35xdj73"},{"name":"优雅","_id":"cky79u00q000bqcl37umz4j4o"}]}}